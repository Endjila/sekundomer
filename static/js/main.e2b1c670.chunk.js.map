{"version":3,"sources":["redux/timerReducer.js","redux/reduxStore.js","components/Timer.js","components/TimerContainer.js","App.js","reportWebVitals.js","index.js","components/Timer.module.css"],"names":["SET_STATUS","initialState","status","timerReducer","state","action","type","reducersBatch","combineReducers","timer","store","createStore","window","Timer","props","useState","timeSec","setTimeSec","clickTimeot","subscriber","useRef","Observable","observer","interval","subscribe","val","next","useEffect","current","sec","unsubscribe","time","Date","toISOString","slice","className","styles","innerElement","onClick","setStatus","btn","clearTimeout","setTimeout","TimerClass","this","React","Component","TimerContainer","connect","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qNAAMA,EAAa,aAEfC,EAAe,CACfC,OAAQ,QAgBGC,EAbM,WAAmC,IAAlCC,EAAiC,uDAAzBH,EAAcI,EAAW,uCACnD,OAAQA,EAAOC,OACNN,EACM,2BAAKI,GAAZ,IAAmBF,OAAQG,EAAOH,SAE3BE,GCRfG,EAAgBC,YAAgB,CAChCC,MAAON,IAGPO,EAAQC,YAAYJ,GAExBK,OAAOF,MAAQA,EAEAA,Q,uFC4EAG,EAnFD,SAACC,GAEX,MAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACIC,EAAc,KAEZC,EAAaC,mBACbX,EAAQ,IAAIY,KAAW,SAACC,GAC1BC,YAAS,KACJC,WAAU,SAACC,GACRH,EAASI,KAAKD,SA2B1BE,qBAAU,WACe,QAAjBb,EAAMZ,SACNiB,EAAWS,QAAUnB,EAAMe,UAAU,CACjCE,KADiC,SAC5BG,GACDZ,GAAW,SAAAY,GAAG,OAAIA,EAAM,WAKf,SAAjBf,EAAMZ,QACAiB,EAAWS,SACbT,EAAWS,QAAQE,gBAG5B,CAAChB,EAAMZ,SAEV,IAAM6B,EAAO,IAAIC,KAAKhB,GAASiB,cAAcC,MAAM,GAAI,IAEvD,OACI,sBAAKC,UAAWC,IAAO3B,MAAvB,UACI,qBAAK0B,UAAWC,IAAOC,aAAvB,SACI,wBAAQC,QA5CA,WAChBxB,EAAMyB,UAAU,QA2CsBJ,UAAWC,IAAOI,IAAhD,qBAIJ,qBAAKL,UAAWC,IAAOC,aAAvB,SACI,wBAAQC,QA9CC,WACjBxB,EAAMyB,UAAU,QAChBtB,EAAW,IA4C4BkB,UAAWC,IAAOI,IAAjD,oBAIJ,qBAAKL,UAAWC,IAAOC,aAAvB,SACI,qCAAQN,EAAR,SAEJ,qBAAKI,UAAWC,IAAOC,aAAvB,SACI,wBAAQC,QAlDE,WAClBrB,EAAW,GACXH,EAAMyB,UAAU,QAgDwBJ,UAAWC,IAAOI,IAAlD,qBAIJ,qBAAKL,UAAWC,IAAOC,aAAvB,SACI,wBAAQC,QAnDA,WACVpB,GACFuB,aAAavB,GACbJ,EAAMyB,UAAU,QAChBrB,EAAc,MAEdA,EAAcwB,YAAW,WACrBxB,EAAc,OACf,MA2C+BiB,UAAWC,IAAOI,IAAhD,wB,OC1EVG,E,4JAEF,WACI,OAAO,8BACH,cAAC,EAAD,eAAWC,KAAK9B,c,GAJH+B,IAAMC,WAmBhBC,EAJQC,aANC,SAAC5C,GACrB,MAAO,CACHF,OAAQE,EAAMK,MAAMP,UAIoB,CAC5CqC,UHNqB,SAACrC,GAAD,MAAa,CAAEI,KAAMN,EAAYE,YGKnC8C,CAEpBL,GCVYM,MARf,WACE,OACE,qBAAKd,UAAU,MAAf,SACE,cAAC,EAAD,OCKSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJoD,SAASC,eAAe,SAM1Bb,K,kBCnBAc,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,IAAM,sB","file":"static/js/main.e2b1c670.chunk.js","sourcesContent":["const SET_STATUS = \"SET_STATUS\";\r\n\r\nlet initialState = {\r\n    status: \"stop\",\r\n};\r\n\r\nconst timerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_STATUS:\r\n            return { ...state, status: action.status }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\r\n\r\n\r\n\r\nexport default timerReducer;","import {combineReducers, createStore} from \"redux\";\r\nimport timerReducer from \"./timerReducer\";\r\n\r\nlet reducersBatch = combineReducers({\r\n    timer: timerReducer,\r\n});\r\n\r\nlet store = createStore(reducersBatch);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { interval, Observable } from \"rxjs\";\r\nimport styles from \"./Timer.module.css\";\r\n\r\nconst Timer = (props) => {\r\n\r\n    const [timeSec, setTimeSec] = useState(0);\r\n    let clickTimeot = null;\r\n\r\n    const subscriber = useRef();\r\n    const timer = new Observable((observer) => {\r\n        interval(1000)\r\n            .subscribe((val) => {\r\n                observer.next(val)\r\n            })\r\n    })\r\n\r\n    const onStatusRun = () => {\r\n        props.setStatus(\"run\");\r\n    }\r\n    const onStatusStop = () => {\r\n        props.setStatus(\"stop\");\r\n        setTimeSec(0);\r\n    }\r\n    const onStatusReset = () => {\r\n        setTimeSec(0);\r\n        props.setStatus(\"run\");\r\n    }\r\n    const doubleClick = () => {\r\n        if (!!clickTimeot) {\r\n            clearTimeout(clickTimeot);\r\n            props.setStatus(\"stop\");\r\n            clickTimeot = null;\r\n        } else {\r\n            clickTimeot = setTimeout(() => {\r\n                clickTimeot = null;\r\n            }, 300)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.status === \"run\") {\r\n            subscriber.current = timer.subscribe({\r\n                next(sec) {\r\n                    setTimeSec(sec => sec + 1000);\r\n                    \r\n                }\r\n            })\r\n        }\r\n        if (props.status === \"stop\") {\r\n            if (!!subscriber.current) {\r\n                subscriber.current.unsubscribe();\r\n            }\r\n        }\r\n    }, [props.status]);\r\n\r\n    const time = new Date(timeSec).toISOString().slice(11, 19);\r\n\r\n    return (\r\n        <div className={styles.timer}>\r\n            <div className={styles.innerElement}>\r\n                <button onClick={onStatusRun} className={styles.btn}>\r\n                    Start\r\n                </button>\r\n            </div>\r\n            <div className={styles.innerElement}>\r\n                <button onClick={onStatusStop} className={styles.btn}>\r\n                    Stop\r\n                </button>\r\n            </div>\r\n            <div className={styles.innerElement}>\r\n                <span> {time} </span>\r\n            </div>\r\n            <div className={styles.innerElement}>\r\n                <button onClick={onStatusReset} className={styles.btn}>\r\n                    Reset\r\n                </button>\r\n            </div>\r\n            <div className={styles.innerElement}>\r\n                <button onClick={doubleClick} className={styles.btn}>\r\n                    Wait\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Timer;","import React from 'react';\r\nimport Timer from './Timer';\r\nimport { setStatus} from '../redux/timerReducer';\r\nimport { connect } from 'react-redux';\r\n\r\nclass TimerClass extends React.Component {\r\n\r\n    render() {\r\n        return <div>\r\n            <Timer {...this.props} />\r\n        </div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.timer.status,\r\n    }\r\n};\r\n\r\nconst TimerContainer = connect(mapStateToProps, {\r\n    setStatus,\r\n})(TimerClass);\r\n\r\nexport default TimerContainer;","import React from \"react\";\nimport './App.css';\nimport TimerContainer from \"./components/TimerContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TimerContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/reduxStore';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__3TR59\",\"innerElement\":\"Timer_innerElement__2JvZq\",\"btn\":\"Timer_btn__u5uu_\"};"],"sourceRoot":""}